.data
    nl:        .asciiz "\n"

.text
    main:
    li		$v0, 5		# $v0 = 5
    syscall			    # read_int()
    move	$s0, $v0	# $t0 = $v0     -> idade da mae = $s0

    li		$v0, 5		# $v0 = 5
    syscall			    # read_int()
    move	$s1, $v0	# $t1 = $v0     -> idade do 1 filho = $s1

    li		$v0, 5		# $v0 = 5
    syscall			    # read_int()
    move	$s2, $v0	# $t2 = $v0     -> idade do 2 filho = $s2

    add		$t3, $s1, $s2		        # $s0 = $t1 + $t2
    sub		$s3, $s0, $t3		        # $s1 = $t0 - $s0  -> idade do 3 filho = $s3
    
    bgt		$s1, $s2, filho1e3	        # if $s1 > $s2 then goto filho1
    bgt		$s2, $s3, filho2maisvelho	# if $s2 > $s3 then goto filho2maisvelho
    j        filho3maisvelho			# else goto filho3maisvelho

    filho1e3:
        bgt		$s1, $s3, filho1maisvelho	# if $s1 > $s3 then goto filho1maisvelho
        j        filho3maisvelho			# else goto filho3maisvelho        

    # --------- filho 1 mais velho ------------
    filho1maisvelho:
        li		$v0, 1		    # $t1 = 1 
        move 	$a0, $s1	    # $a0 = $s1
        syscall                 # print_int($t1)
        j		end				# jump to end

    # --------- filho 2 mais velho ------------
    filho2maisvelho:
        li		$v0, 1		    # $t1 = 1 
        move 	$a0, $s2	    # $a0 = $s2
        syscall                 # print_int($t1)
        j        end		    # jump to end

    # --------- filho 3 mais velho ------------
    filho3maisvelho:
        li		$v0, 1		    # $t1 = 1 
        move 	$a0, $s3	    # $a0 = $s3
        syscall                 # print_int($t1)
        j        end			# jump to end

    end:
        li		$v0, 4		    # $v0 = 4
        la		$a0, nl		    # 
        syscall                 # print_string(nl)

        li		$v0, 10		    # $v0 = 10
        syscall			        # exit()